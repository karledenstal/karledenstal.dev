---
import { getCollection } from 'astro:content';
import slugify from 'slugify';
import MarkdownProjectLayout from '@/layouts/MarkdownProjectLayout.astro';
import BaseLayout from '@/layouts/BaseLayout.astro';
import PageHeader from '@/components/PageHeader.astro';
import Subtitle from '@/components/Subtitle.astro';
import { List } from '@/components/table/Table';

export async function getStaticPaths() {
  const allProjects = await getCollection('projects');
  const uniqueTags = [
    ...new Set(
      allProjects
        .map((project) => project.data.stack)
        .flat()
        .map((t) => slugify(t, { lower: true }))
    ),
  ];

  return uniqueTags.map((tag) => {
    const filteredProjects = allProjects
      .filter(({ data }) => {
        const stack = data.stack.map((t) => slugify(t, { lower: true }));
        console.log('stack', stack);
        return stack.includes(tag);
      })
      .map(({ data, slug }) => {
        const startDate = new Date(data.period.split(' - ')[0]);
        const endDate = new Date(data.period.split(' - ')[1]);

        return {
          ...data,
          slug: slug as string,
          startDate: isNaN(startDate.getTime()) ? new Date() : startDate,
          endDate: isNaN(endDate.getTime()) ? null : endDate,
        };
      });

    return {
      params: { tag },
      props: { projects: filteredProjects },
    };
  });
}

const { tag } = Astro.params;
const { projects } = Astro.props;

console.log('tag', tag);
console.log('projects', projects);
---

<BaseLayout pageTitle={tag}>
  <main class="py-28 w-full max-w-sm lg:max-w-7xl mx-auto">
    <PageHeader headline={tag}>
      <Subtitle text={`Projects associated with tag ${tag}`} />
    </PageHeader>
    <List client:load data={projects} />
  </main>
</BaseLayout>
